{"ast":null,"code":"var _jsxFileName = \"/Users/lauren/Desktop/nucampsite/src/components/MainComponent.js\";\nimport React, { Component } from 'react';\nimport Directory from './DirectoryComponent';\nimport CampsiteInfo from './CampsiteInfoComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actions } from 'react-redux-form';\nimport { addComment, fetchCampsites } from '../redux/ActionCreators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    campsites: state.campsites,\n    comments: state.comments,\n    partners: state.partners,\n    promotions: state.promotions\n  };\n};\n\nconst mapDispatchToProps = {\n  addComment: (campsiteId, rating, author, text) => addComment(campsiteId, rating, author, text),\n  fetchCampsites: () => fetchCampsites(),\n  resetFeedbackForm: () => actions.reset('feedbackForm')\n};\n\nclass Main extends Component {\n  componentDidMount() {\n    this.props.fetchCampsites();\n  }\n\n  render() {\n    const HomePage = () => {\n      return /*#__PURE__*/_jsxDEV(Home, {\n        campsite: this.props.campsites.campsites.filter(campsite => campsite.featured)[0],\n        campsitesLoading: this.props.campsites.isLoading,\n        campsitesErrMess: this.props.campsites.errMess,\n        promotion: this.props.promotions.filter(promotion => promotion.featured)[0],\n        partner: this.props.partners.filter(partner => partner.featured)[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    };\n\n    const CampsiteWithId = _ref => {\n      let {\n        match\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(CampsiteInfo, {\n        campsite: this.props.campsites.campsites.filter(campsite => campsite.id === +match.params.campsiteId)[0],\n        isLoading: this.props.campsites.isLoading,\n        errMess: this.props.campsites.errMess,\n        comments: this.props.comments.filter(comment => comment.campsiteId === +match.params.campsiteId),\n        addComment: this.props.addComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          component: HomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/directory\",\n          render: () => /*#__PURE__*/_jsxDEV(Directory, {\n            campsites: this.props.campsites\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/directory/:campsiteId\",\n          component: CampsiteWithId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/contactus\",\n          render: () => /*#__PURE__*/_jsxDEV(Contact, {\n            resetFeedbackForm: this.props.resetFeedbackForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/aboutus\",\n          render: () => /*#__PURE__*/_jsxDEV(About, {\n            partners: this.props.partners\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 64\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","map":{"version":3,"sources":["/Users/lauren/Desktop/nucampsite/src/components/MainComponent.js"],"names":["React","Component","Directory","CampsiteInfo","Header","Footer","Home","Contact","About","Switch","Route","Redirect","withRouter","connect","actions","addComment","fetchCampsites","mapStateToProps","state","campsites","comments","partners","promotions","mapDispatchToProps","campsiteId","rating","author","text","resetFeedbackForm","reset","Main","componentDidMount","props","render","HomePage","filter","campsite","featured","isLoading","errMess","promotion","partner","CampsiteWithId","match","id","params","comment"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Directory from './DirectoryComponent';\nimport CampsiteInfo from './CampsiteInfoComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actions } from 'react-redux-form';\nimport { addComment, fetchCampsites } from '../redux/ActionCreators';\nconst mapStateToProps = state => {\n    return {\n        campsites: state.campsites,\n        comments: state.comments,\n        partners: state.partners,\n        promotions: state.promotions\n    };\n};\nconst mapDispatchToProps = {\n    addComment: (campsiteId, rating, author, text) => (addComment(campsiteId, rating, author, text)),\n    fetchCampsites: () => (fetchCampsites()),\n    resetFeedbackForm: () => (actions.reset('feedbackForm'))\n};\nclass Main extends Component {\n    componentDidMount() {\n        this.props.fetchCampsites();\n    }\n    render() {\n        const HomePage = () => {\n            return (\n                <Home\n                    campsite={this.props.campsites.campsites.filter(campsite => campsite.featured)[0]}\n                    campsitesLoading={this.props.campsites.isLoading}\n                    campsitesErrMess={this.props.campsites.errMess}\n                    promotion={this.props.promotions.filter(promotion => promotion.featured)[0]}\n                    partner={this.props.partners.filter(partner => partner.featured)[0]}\n                />\n            );\n        }\n        const CampsiteWithId = ({match}) => {\n            return (\n                <CampsiteInfo\n                    campsite={this.props.campsites.campsites.filter(campsite => campsite.id === +match.params.campsiteId)[0]}\n                    isLoading={this.props.campsites.isLoading}\n                    errMess={this.props.campsites.errMess}\n                    comments={this.props.comments.filter(comment => comment.campsiteId === +match.params.campsiteId)}\n                    addComment={this.props.addComment}\n                />\n            );\n        };\n        return (\n            <div>\n                <Header />\n                <Switch>\n                    <Route path='/home' component={HomePage} />\n                    <Route exact path='/directory' render={() => <Directory campsites={this.props.campsites} />} />\n                    <Route path='/directory/:campsiteId' component={CampsiteWithId} />\n                    <Route exact path='/contactus' render={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} />} />\n                    <Route exact path='/aboutus' render={() => <About partners={this.props.partners} /> } />\n                    <Redirect to='/home' />\n                </Switch>\n                <Footer />\n            </div>\n        );\n    }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));"]},"metadata":{},"sourceType":"module"}